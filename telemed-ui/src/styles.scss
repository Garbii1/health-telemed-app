/* src/styles.scss */
@use 'sass:color'; // Import the built-in sass:color module
@import url('https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700&display=swap');

// --- SCSS Variables (for use in SASS functions) ---
$primary-color-value: #4a90e2;
$secondary-color-value: #50e3c2;
$accent-color-value: #f5a623;
$success-color-value: #28a745;
$error-color-value: #dc3545;
$bg-color-value: #f8f9fa;
$text-color-light-value: #666;
$link-color-value: $primary-color-value; // Base link color as SCSS var

// --- CSS Variables (for use in application styles) ---
:root {
  --primary-color: #{$primary-color-value};
  --secondary-color: #{$secondary-color-value};
  --accent-color: #{$accent-color-value};
  --text-color: #333;
  --text-color-light: #{$text-color-light-value};
  --bg-color: #{$bg-color-value};
  --bg-color-alt: #ffffff;
  --border-color: #e0e0e0;
  --success-color: #{$success-color-value};
  --error-color: #{$error-color-value};
  --link-color: #{$link-color-value}; // Define CSS var from SCSS var
  --link-color-hover: #{color.adjust($link-color-value, $lightness: -10%)}; // Define hover color CSS var using SCSS var

  // ... rest of CSS variables ...
  --font-family-base: 'Poppins', sans-serif;
  --font-size-base: 16px;
  --line-height-base: 1.6;
  --border-radius: 8px;
  --box-shadow: 0 4px 12px rgba(0, 0, 0, 0.08);
  --box-shadow-hover: 0 6px 16px rgba(0, 0, 0, 0.12);
  --container-max-width: 1200px;
  --container-padding: 0 20px;
  --header-height: 70px;
  --footer-height: 50px;
}

// --- Reset & Base Styles ---
// ... (Keep reset and base styles as before) ...
*,
*::before,
*::after { box-sizing: border-box; margin: 0; padding: 0; }
html { font-size: var(--font-size-base); scroll-behavior: smooth; }
body { font-family: var(--font-family-base); line-height: var(--line-height-base); color: var(--text-color); background-color: var(--bg-color); -webkit-font-smoothing: antialiased; -moz-osx-font-smoothing: grayscale; display: flex; flex-direction: column; min-height: 100vh; }
main { flex-grow: 1; padding-top: calc(var(--header-height, 70px) + 0.5rem); padding-bottom: 2rem; }
h1, h2, h3, h4, h5, h6 { margin-bottom: 0.75rem; font-weight: 600; line-height: 1.3; }
h1 { font-size: 2.2rem; } h2 { font-size: 1.8rem; } h3 { font-size: 1.5rem; } h4 { font-size: 1.2rem; }
p { margin-bottom: 1rem; color: var(--text-color-light); }

a {
  color: var(--link-color); // Use CSS var
  text-decoration: none;
  transition: color 0.2s ease-in-out;
  &:hover {
    color: var(--link-color-hover); // Use pre-calculated hover CSS var
    text-decoration: underline;
  }
}

ul, ol { list-style-position: inside; margin-bottom: 1rem; padding-left: 1.5rem; }
img { max-width: 100%; height: auto; display: block; }
button, input, select, textarea { font-family: inherit; font-size: 1rem; line-height: var(--line-height-base); }

// --- Layout Container ---
// ... (Keep as before) ...
.container { max-width: var(--container-max-width); margin-left: auto; margin-right: auto; padding: var(--container-padding); }

// --- Utility Classes ---
// ... (Keep as before, ensure comprehensive) ...
.text-center { text-align: center !important; } .mt-1 { margin-top: 0.5rem !important; } /* ...etc */
.mb-1 { margin-bottom: 0.25rem !important; } .mb-2 { margin-bottom: 0.5rem !important; } .mb-3 { margin-bottom: 1rem !important; } .mb-4 { margin-bottom: 1.5rem !important; }
.me-1 { margin-right: .25rem !important; } .me-2 { margin-right: .5rem !important; } .ms-2 { margin-left: .5rem !important; }
.p-1 { padding: 0.5rem !important; } .p-2 { padding: 1rem !important; } .p-3 { padding: 1.5rem !important; } .p-4 { padding: 2rem !important; }
.d-block { display: block !important; } .d-flex { display: flex !important; }
.justify-content-between { justify-content: space-between !important; } .justify-content-end { justify-content: flex-end !important; } .justify-content-center { justify-content: center !important; }
.align-items-center { align-items: center !important; } .align-items-start { align-items: flex-start !important; }
.flex-column { flex-direction: column !important; } .flex-shrink-0 { flex-shrink: 0 !important; } .flex-wrap { flex-wrap: wrap !important; }
.w-100 { width: 100% !important; }
.text-end { text-align: right !important; }
.text-muted { color: var(--text-color-light) !important; } .text-primary { color: var(--primary-color) !important; } /* etc */
.bg-primary { background-color: var(--primary-color) !important; color: #fff; } .bg-success { background-color: var(--success-color) !important; color: #fff; } .bg-secondary { background-color: var(--text-color-light) !important; color: #fff; } /* etc */
.bg-light { background-color: var(--bg-color) !important; }
.shadow-sm { box-shadow: 0 .125rem .25rem rgba(0,0,0,.075)!important; }
.badge { display: inline-block; padding: .35em .65em; font-size: .75em; font-weight: 700; line-height: 1; color: #fff; text-align: center; white-space: nowrap; vertical-align: baseline; border-radius: .375rem; }
.visually-hidden { position: absolute !important; width: 1px !important; height: 1px !important; padding: 0 !important; margin: -1px !important; overflow: hidden !important; clip: rect(0,0,0,0) !important; white-space: nowrap !important; border: 0 !important; }


// --- Buttons ---
// ... (Keep button styles as before, using SCSS vars for hover calcs) ...
.btn { /* ... base styles ... */ }
.btn-primary { color: #fff; background-color: var(--primary-color); border-color: var(--primary-color); &:hover:not(:disabled) { background-color: color.adjust($primary-color-value, $lightness: -10%); border-color: color.adjust($primary-color-value, $lightness: -12%); } }
/* ... other button variations ... */
.btn-sm { /* ... */ } .btn-lg { /* ... */ }


// --- Forms ---
// ... (Keep form styles as before, using SCSS vars for focus calcs) ...
.form-group { margin-bottom: 1.5rem; }
.form-label { display: block; margin-bottom: 0.5rem; font-weight: 500; }
.form-control { /* ... base styles ... */ &:focus { border-color: $primary-color-value; outline: 0; box-shadow: 0 0 0 0.2rem rgba($primary-color-value, 0.25); } &.ng-invalid.ng-touched { border-color: $error-color-value; &:focus { box-shadow: 0 0 0 0.2rem rgba($error-color-value, 0.25); } } }
/* ... form-select, form-check, invalid-feedback, input-group ... */


// --- Cards ---
// ... (Keep card styles as before) ...
.card { /* ... */ } .card-header { /* ... */ } .card-body { /* ... */ } .card-footer { /* ... */ }


// --- Alerts ---
// ... (Keep alert styles as before, using SASS color functions with SCSS vars) ...
.alert { /* ... base styles ... */ }
.alert-success { color: color.adjust($success-color-value, $lightness: -15%, $saturation: -5%); background-color: color.adjust($success-color-value, $alpha: -0.8); border-color: color.adjust($success-color-value, $alpha: -0.7); }
/* ... other alert variations ... */


// --- Spinners ---
// ... (Keep spinner styles as before) ...
.spinner-border { /* ... */ } .spinner-border-sm { /* ... */ } @keyframes spinner-border { /* ... */ }


// --- List Group ---
// ... (Keep list group styles as before) ...
.list-group { /* ... */ } .list-group-item { /* ... */ } .list-group-item-action { /* ... */ }


// --- Responsive Design ---
// ... (Keep responsive styles as before) ...
@media (max-width: 768px) { /* ... */ }
@media (max-width: 576px) { /* ... */ }