/* src/styles.scss */
@use 'sass:color'; // Import the built-in sass:color module
@import url('https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700&display=swap');

// --- Variables ---
:root {
  --primary-color: #4a90e2; // A calm blue
  --secondary-color: #50e3c2; // A gentle teal/green accent
  --accent-color: #f5a623; // Optional accent (e.g., for warnings or highlights)
  --text-color: #333;
  --text-color-light: #666;
  --bg-color: #f8f9fa; // Light grey background
  --bg-color-alt: #ffffff; // White for cards/containers
  --border-color: #e0e0e0;
  --success-color: #28a745;
  --error-color: #dc3545;
  --link-color: var(--primary-color);

  --font-family-base: 'Poppins', sans-serif;
  --font-size-base: 16px;
  --line-height-base: 1.6;

  --border-radius: 8px;
  --box-shadow: 0 4px 12px rgba(0, 0, 0, 0.08);
  --box-shadow-hover: 0 6px 16px rgba(0, 0, 0, 0.12);

  --container-max-width: 1200px;
  --container-padding: 0 20px;

  --header-height: 70px;
  --footer-height: 50px;
}

// --- Reset & Base Styles ---
*,
*::before,
*::after {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
}

html {
  font-size: var(--font-size-base);
  scroll-behavior: smooth;
}

body {
  font-family: var(--font-family-base);
  line-height: var(--line-height-base);
  color: var(--text-color);
  background-color: var(--bg-color);
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  display: flex;
  flex-direction: column;
  min-height: 100vh;
}

main {
  flex-grow: 1; // Ensure main content takes up available space
  padding-top: var(--header-height); // Prevent content from hiding under fixed header
  padding-bottom: 2rem; // Add some space before the footer
}

h1, h2, h3, h4, h5, h6 {
  margin-bottom: 0.75rem;
  font-weight: 600;
  line-height: 1.3;
}

h1 { font-size: 2.2rem; }
h2 { font-size: 1.8rem; }
h3 { font-size: 1.5rem; }
h4 { font-size: 1.2rem; }

p {
  margin-bottom: 1rem;
  color: var(--text-color-light);
}

a {
  color: var(--link-color);
  text-decoration: none;
  transition: color 0.2s ease-in-out;

  &:hover {
    // Use color.adjust instead of deprecated darken
    color: color.adjust(var(--link-color), $lightness: -10%);
    text-decoration: underline;
  }
}

ul, ol {
  list-style-position: inside;
  margin-bottom: 1rem;
  padding-left: 1.5rem; // Indent list items
}

img {
  max-width: 100%;
  height: auto;
  display: block; // Remove bottom space
}

button, input, select, textarea {
  font-family: inherit;
  font-size: 1rem;
  line-height: var(--line-height-base);
}

// --- Layout Container ---
.container {
  max-width: var(--container-max-width);
  margin-left: auto;
  margin-right: auto;
  padding: var(--container-padding);
}

// --- Utility Classes ---
.text-center { text-align: center; }
.mt-1 { margin-top: 0.5rem; }
.mt-2 { margin-top: 1rem; }
.mt-3 { margin-top: 1.5rem; }
.mt-4 { margin-top: 2rem; }
.mb-1 { margin-bottom: 0.5rem; }
.mb-2 { margin-bottom: 1rem; }
.mb-3 { margin-bottom: 1.5rem; }
.mb-4 { margin-bottom: 2rem; }
.p-1 { padding: 0.5rem; }
.p-2 { padding: 1rem; }
.p-3 { padding: 1.5rem; }
.p-4 { padding: 2rem; }
.me-1 { margin-right: .25rem !important; }
.me-2 { margin-right: .5rem !important; }
.ms-2 { margin-left: .5rem !important; }
.d-block { display: block !important; }
.text-end { text-align: right !important; }
.text-muted { color: var(--text-color-light) !important; }
.text-primary { color: var(--primary-color) !important; }
.text-success { color: var(--success-color) !important; }
.text-danger { color: var(--error-color) !important; }
.text-info { color: #0dcaf0 !important; } /* Define info color if needed */
.text-secondary { color: var(--secondary-color) !important; }
.bg-primary { background-color: var(--primary-color) !important; }
.bg-success { background-color: var(--success-color) !important; }
.bg-secondary { background-color: var(--text-color-light) !important; } /* Use a neutral grey for cancelled */
.badge { display: inline-block; padding: .35em .65em; font-size: .75em; font-weight: 700; line-height: 1; color: #fff; text-align: center; white-space: nowrap; vertical-align: baseline; border-radius: .25rem; }
.visually-hidden { position: absolute !important; width: 1px !important; height: 1px !important; padding: 0 !important; margin: -1px !important; overflow: hidden !important; clip: rect(0,0,0,0) !important; white-space: nowrap !important; border: 0 !important; }


// --- Buttons ---
.btn {
  display: inline-block;
  padding: 0.75rem 1.5rem;
  font-weight: 500;
  text-align: center;
  vertical-align: middle;
  cursor: pointer;
  border: 1px solid transparent;
  border-radius: var(--border-radius);
  transition: all 0.2s ease-in-out;
  user-select: none; // Prevent text selection on click

  &:disabled {
    opacity: 0.65;
    cursor: not-allowed;
  }
}

.btn-primary {
  color: #fff;
  background-color: var(--primary-color);
  border-color: var(--primary-color);

  &:hover:not(:disabled) {
    background-color: color.adjust(var(--primary-color), $lightness: -10%);
    border-color: color.adjust(var(--primary-color), $lightness: -12%);
  }
}

.btn-secondary {
   color: #fff;
   background-color: var(--secondary-color);
   border-color: var(--secondary-color);

   &:hover:not(:disabled) {
     background-color: color.adjust(var(--secondary-color), $lightness: -10%);
     border-color: color.adjust(var(--secondary-color), $lightness: -12%);
   }
 }

.btn-outline-primary {
  color: var(--primary-color);
  background-color: transparent;
  border-color: var(--primary-color);

  &:hover:not(:disabled) {
    color: #fff;
    background-color: var(--primary-color);
  }
}

.btn-outline-secondary {
   color: var(--text-color-light);
   border-color: var(--text-color-light);
   &:hover:not(:disabled) {
     color: #fff;
     background-color: var(--text-color-light);
     border-color: var(--text-color-light);
   }
 }


.btn-danger {
   color: #fff;
   background-color: var(--error-color);
   border-color: var(--error-color);

   &:hover:not(:disabled) {
     background-color: color.adjust(var(--error-color), $lightness: -10%);
     border-color: color.adjust(var(--error-color), $lightness: -12%);
   }
 }

.btn-outline-danger {
   color: var(--error-color);
   border-color: var(--error-color);
    &:hover:not(:disabled) {
     color: #fff;
     background-color: var(--error-color);
   }
 }

.btn-success {
    color: #fff;
    background-color: var(--success-color);
    border-color: var(--success-color);
     &:hover:not(:disabled) {
        background-color: color.adjust(var(--success-color), $lightness: -10%);
        border-color: color.adjust(var(--success-color), $lightness: -12%);
    }
}

.btn-sm {
  padding: .25rem .5rem;
  font-size: .875rem;
  border-radius: .2rem;
}

.btn-lg {
   padding: .5rem 1rem;
   font-size: 1.25rem;
   border-radius: .3rem;
}


// --- Forms ---
.form-group {
  margin-bottom: 1.5rem;
}

.form-label {
  display: block;
  margin-bottom: 0.5rem;
  font-weight: 500;
}

.form-control {
  display: block;
  width: 100%;
  padding: 0.75rem 1rem;
  font-size: 1rem;
  font-weight: 400;
  line-height: 1.5;
  color: var(--text-color);
  background-color: var(--bg-color-alt);
  background-clip: padding-box;
  border: 1px solid var(--border-color);
  appearance: none; // Reset default styling
  border-radius: var(--border-radius);
  transition: border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;

  &:focus {
    border-color: var(--primary-color);
    outline: 0;
    // Use rgba with CSS variables for the focus shadow
    box-shadow: 0 0 0 0.2rem rgba(var(--primary-color), 0.25);
  }

  &::placeholder {
    color: #aaa;
  }

  // Style invalid state based on Angular classes
  &.ng-invalid.ng-touched {
      border-color: var(--error-color);
      &:focus {
         // Use rgba with CSS variables for the focus shadow
        box-shadow: 0 0 0 0.2rem rgba(var(--error-color), 0.25);
      }
  }
}

textarea.form-control {
  min-height: 120px;
  resize: vertical;
}

.form-select {
    /* Basic styling if not using Bootstrap's default */
    display: block;
    width: 100%;
    padding: .75rem 2.25rem .75rem 1rem;
    font-size: 1rem;
    font-weight: 400;
    line-height: 1.5;
    color: var(--text-color);
    background-color: #fff;
    background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16'%3e%3cpath fill='none' stroke='%23343a40' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M2 5l6 6 6-6'/%3e%3c/svg%3e");
    background-repeat: no-repeat;
    background-position: right 1rem center;
    background-size: 16px 12px;
    border: 1px solid var(--border-color);
    border-radius: var(--border-radius);
    appearance: none;
    &.ng-invalid.ng-touched { border-color: var(--error-color); }
}

.form-check {
  display: flex;
  align-items: center;
  margin-bottom: 0.5rem;
}

.form-check-input {
  margin-right: 0.5rem;
  width: 1.2em;
  height: 1.2em;
}

.form-check-label {
  margin-bottom: 0; // Reset default margin
}

.invalid-feedback {
  display: none; // Hide by default
  width: 100%;
  margin-top: 0.25rem;
  font-size: 0.875em;
  color: var(--error-color);
}

// Show feedback when related control is invalid and touched
.form-control.ng-invalid.ng-touched + .invalid-feedback,
.form-select.ng-invalid.ng-touched + .invalid-feedback,
.ng-invalid.ng-touched .invalid-feedback /* For custom controls or groups */
{
  display: block;
}

.input-group { display: flex; flex-wrap: nowrap; align-items: stretch; width: 100%; }
.input-group .form-control { position: relative; flex: 1 1 auto; width: 1%; min-width: 0; }
.input-group .form-control:not(:first-child) { border-top-left-radius: 0; border-bottom-left-radius: 0; }
.input-group .form-control:not(:last-child) { border-top-right-radius: 0; border-bottom-right-radius: 0; }
.input-group-text { display: flex; align-items: center; padding: .75rem 1rem; margin-bottom: 0; font-size: 1rem; font-weight: 400; line-height: 1.5; color: #495057; text-align: center; white-space: nowrap; background-color: #e9ecef; border: 1px solid #ced4da; border-radius: var(--border-radius); }
.input-group > .input-group-text { border-top-left-radius: 0; border-bottom-left-radius: 0; border-left: 0;}
.input-group > .form-control { border-right: 0;}


// --- Cards ---
.card {
  background-color: var(--bg-color-alt);
  border: 1px solid var(--border-color);
  border-radius: var(--border-radius);
  box-shadow: var(--box-shadow);
  margin-bottom: 1.5rem;
  overflow: hidden; // Ensure content stays within rounded corners

  .card-header {
    padding: 1rem 1.5rem;
    background-color: var(--bg-color); // Slightly different background for header
    border-bottom: 1px solid var(--border-color);
    font-size: 1.2rem;
    font-weight: 600;
  }

  .card-body {
    padding: 1.5rem;
  }

   .card-footer {
    padding: 1rem 1.5rem;
    background-color: var(--bg-color);
    border-top: 1px solid var(--border-color);
  }
}

// --- Alerts ---
.alert {
  padding: 1rem;
  margin-bottom: 1rem;
  border: 1px solid transparent;
  border-radius: var(--border-radius);
  position: relative; // For potential close buttons

  &.alert-success {
    color: color.adjust(var(--success-color), $lightness: -15%, $saturation: -5%);
    background-color: color.adjust(var(--success-color), $lightness: 45%);
    border-color: color.adjust(var(--success-color), $lightness: 35%);
  }
  &.alert-danger {
     color: color.adjust(var(--error-color), $lightness: -15%, $saturation: -5%);
     background-color: color.adjust(var(--error-color), $lightness: 45%);
     border-color: color.adjust(var(--error-color), $lightness: 35%);
   }
  &.alert-info {
      color: color.adjust(var(--primary-color), $lightness: -15%, $saturation: -5%);
      background-color: color.adjust(var(--primary-color), $lightness: 45%);
      border-color: color.adjust(var(--primary-color), $lightness: 35%);
   }
   &.alert-warning {
        color: color.adjust(var(--accent-color), $lightness: -15%, $saturation: -5%);
        background-color: color.adjust(var(--accent-color), $lightness: 45%);
        border-color: color.adjust(var(--accent-color), $lightness: 35%);
     }
   &.alert-light {
        color: var(--text-color-light);
        background-color: #f8f9fa;
        border-color: #dee2e6;
   }
}

// --- Spinners ---
.spinner-border {
    display: inline-block;
    width: 2rem;
    height: 2rem;
    vertical-align: text-bottom;
    border: .25em solid currentColor;
    border-right-color: transparent;
    border-radius: 50%;
    -webkit-animation: .75s linear infinite spinner-border;
    animation: .75s linear infinite spinner-border;
}
.spinner-border-sm {
  width: 1rem;
  height: 1rem;
  border-width: 0.2em;
}

@keyframes spinner-border {
    to { transform: rotate(360deg); }
}

// --- List Group ---
.list-group { display: flex; flex-direction: column; padding-left: 0; margin-bottom: 0; border-radius: var(--border-radius); }
.list-group-item { position: relative; display: block; padding: .75rem 1.25rem; background-color: #fff; border: 1px solid var(--border-color); text-decoration: none; color: var(--text-color); }
.list-group-item-action { width: 100%; color: var(--text-color); text-align: inherit; }
.list-group-item-action:hover, .list-group-item-action:focus { z-index: 1; color: var(--text-color); text-decoration: none; background-color: #f8f9fa; }
.list-group-item:first-child { border-top-left-radius: inherit; border-top-right-radius: inherit; }
.list-group-item:last-child { border-bottom-right-radius: inherit; border-bottom-left-radius: inherit; }
.list-group-item + .list-group-item { border-top-width: 0; } /* Collapse borders */


// --- Responsive Design ---
@media (max-width: 768px) {
  html { font-size: 15px; } /* Slightly smaller base font on smaller screens */
  h1 { font-size: 1.8rem; }
  h2 { font-size: 1.6rem; }
  h3 { font-size: 1.3rem; }

  .container { --container-padding: 0 15px; }

  .btn { padding: 0.6rem 1.2rem; }

  main { padding-top: calc(var(--header-height) - 10px); } /* Adjust if header shrinks */
}

@media (max-width: 576px) {
   html { font-size: 14px; }
   h1 { font-size: 1.6rem; }
   h2 { font-size: 1.4rem; }

   .card-body, .card-header, .card-footer { padding: 1rem; }
   .form-control { padding: 0.6rem 0.8rem;}
}

// --- Specific Component Styles (Should be in component SCSS files) ---